---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- ( include "labels" . ) | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- ( include "labels" . ) | indent 8 }}
    spec:
      {{- if eq .Values.databaseType "external" }}
      {{- $aadIdentityName := .Values.aadIdentityName }}
      volumes:
        - name: kvcreds
          flexVolume:
            driver: "azure/kv"
            {{- if not $aadIdentityName }}
            secretRef:
              name: kvcreds
            {{- end}}
            options:
              usepodidentity: "{{ if $aadIdentityName }}true{{ else }}false{{ end}}"
              tenantid: {{ .Values.tenantId }}
              keyvaultname: {{ .Values.vaultName }}
              keyvaultobjectnames: "pact-db-user;pact-db-password"
              keyvaultobjecttypes: "secret;secret" # OPTIONS: secret, key, cert
      {{- end }}
      containers:
      - image: {{  required "image " .Values.image }}
        name: {{ .Release.Name }}
        {{- if eq .Values.databaseType "external" }}
        command:
          - "/bin/sh"
          - "-c"
          - "export PACT_BROKER_DATABASE_USERNAME=$(cat /kvmnt/pact-db-user)@{{- required "postgresql.postgresqlServerName " .Values.postgresqlServerName -}}; export PACT_BROKER_DATABASE_PASSWORD=$(cat /kvmnt/pact-db-password); /sbin/my_init"
        volumeMounts:
        - name: kvcreds
          mountPath: /kvmnt
          readOnly: true
        {{- end }}
        env:
          {{- if eq .Values.databaseType "osba" }}}}
          - name: PACT_BROKER_DATABASE_HOST
            valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql-config
                  key: host
          - name: PACT_BROKER_DATABASE_PORT
            valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql-config
                  key: port
          - name: PACT_BROKER_DATABASE_USERNAME
            valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql-config
                  key: username
          - name: PACT_BROKER_DATABASE_PASSWORD
            valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql-config
                  key: password
          - name: PACT_BROKER_DATABASE_NAME
            valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql-config
                  key: database
          - name: PACT_BROKER_DISABLE_SSL_VERIFICATION
            valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql-config
                  key: sslRequired
          {{- else if eq .Values.databaseType "pod" }}
          - name: PACT_BROKER_DATABASE_HOST
            value: {{ .Release.Name }}-postgresql
          - name: PACT_BROKER_DATABASE_PORT
            value: "5432"
          - name: PACT_BROKER_DATABASE_USERNAME
            value: {{ required "postgresql.postgresqlUsername " .Values.postgresql.postgresqlUsername  }}
          - name: PACT_BROKER_DATABASE_PASSWORD
            value: {{ required "postgresql.postgresqlPassword " .Values.postgresql.postgresqlPassword  }}
          - name: PACT_BROKER_DATABASE_NAME
            value: {{ required "postgresql.postgresqlDatabase " .Values.postgresql.postgresqlDatabase  }}
          - name: PACT_BROKER_DISABLE_SSL_VERIFICATION
            value: "true"
          {{- else if eq .Values.databaseType "external" }}
          - name: PACT_BROKER_DATABASE_HOST
            value: {{ required "postgresqlHost " .Values.postgresqlHost }}
          - name: PACT_BROKER_DATABASE_PORT
            value: {{ .Values.postgresqlPort | default "5432" | quote }}
          - name: PACT_BROKER_DATABASE_NAME
            value: {{ required "postgresqlDatabase " .Values.postgresqlDatabase }}
          - name: PACT_BROKER_DISABLE_SSL_VERIFICATION
            value: {{ .Values.postgresqlEnableSsl | default "true" | quote }}
          {{- end }}
          - name: PACT_BROKER_PUBLIC_HEARTBEAT
            value: 'true'
          - name: PACT_BROKER_LOG_LEVEL
            value: INFO
        resources:
          requests:
            memory: {{ required "memoryRequests " .Values.memoryRequests  }}
            cpu: {{ required "cpuRequests " .Values.cpuRequests  }}
          limits:
            memory: {{  required "memoryLimits  " .Values.memoryLimits   }}
            cpu: {{  required "cpuLimits  " .Values.cpuLimits   }}
        ports:
        - containerPort: {{ required "applicationPort " .Values.applicationPort  }}
          name: http
        livenessProbe:
          httpGet:
            path: {{ required "livenessPath" .Values.livenessPath  }}
            port: {{  required "applicationPort " .Values.applicationPort  }}
          initialDelaySeconds: {{  required "livenessDelay " .Values.livenessDelay  }}
          timeoutSeconds: {{  required "livenessTimeout " .Values.livenessTimeout  }}
          periodSeconds: {{  required "livenessPeriod " .Values.livenessPeriod  }}
          failureThreshold: {{  required "livenessFailureThreshold  " .Values.livenessFailureThreshold   }}
        readinessProbe:
          httpGet:
            path: {{ required "readinessPath" .Values.readinessPath   }}
            port: {{  required "applicationPort" .Values.applicationPort  }}
          initialDelaySeconds: {{  required "readinessDelay " .Values.readinessDelay  }}
          timeoutSeconds: {{  required "readinessTimeout " .Values.readinessTimeout  }}
          periodSeconds: {{  required "readinessPeriod " .Values.readinessPeriod  }}
        imagePullPolicy: IfNotPresent
